import { WindowsConfiguration } from "./options/winOptions";
export declare function getSignVendorPath(): Promise<string>;
export interface FileCodeSigningInfo {
    readonly file?: string | null;
    readonly password?: string | null;
    readonly subjectName?: string | null;
    readonly certificateSha1?: string | null;
}
export declare type CustomWindowsSign = (configuration: CustomWindowsSignTaskConfiguration) => Promise<any>;
export interface WindowsSignOptions {
    readonly path: string;
    readonly cert?: string | null;
    readonly name?: string | null;
    readonly password?: string | null;
    readonly site?: string | null;
    readonly options: WindowsConfiguration;
}
export interface WindowsSignTaskConfiguration extends WindowsSignOptions {
    resultOutputPath?: string;
    hash: string;
    isNest: boolean;
}
export interface CustomWindowsSignTaskConfiguration extends WindowsSignTaskConfiguration {
    computeSignToolArgs(isWin: boolean): Array<string>;
}
export declare function sign(options: WindowsSignOptions): Promise<void>;
