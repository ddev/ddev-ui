{"version":3,"file":"updateUnfoBuilder.js","sourceRoot":"","sources":["../../src/publish/updateUnfoBuilder.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAYA,AAAgB,AAChB,AAAM;;oEAAC,AAAK,WAA0B,AAAsB,OAAE,AAA4C;AACxG,cAAM,AAAQ,WAAG,AAAK,MAAC,AAAQ;AAC/B,cAAM,AAAc,iBAAG,MAAM,AAA8B,gFAAC,AAAQ,UAAE,AAAe,iBAAE,AAAK,MAAC,AAAI,AAAC;AAClG,AAAE,AAAC,YAAC,AAAc,kBAAI,AAAI,QAAI,AAAc,eAAC,AAAM,WAAK,AAAC,AAAC,GAAC,AAAC;AAC1D,AAAM,AACR;AAAC;AAED,cAAM,AAAM,SAAG,AAAK,MAAC,AAAO;AAC5B,cAAM,AAAM,SAAG,AAAM,OAAC,AAAM;AAC5B,cAAM,AAAO,UAAG,AAAQ,SAAC,AAAO,QAAC,AAAO;AACxC,cAAM,AAAI;AAAoB,mBAAM,AAAQ,oDAAC,AAAK,MAAC,AAAK,MAAE,AAAQ,UAAE,AAAK,AAAC,AAAC;SAA9D,AAAI,AAAI;AACrB,cAAM,AAAK,QAAG,AAAQ,SAAC,AAAQ,aAAK,AAAQ,iCAAC,AAAG;AAEhD,cAAM,AAAW,gCAAoB,AAAQ,SAAC,AAAM,OAAC,AAAW,AAAC;AACjE,AAAE,AAAC,YAAC,AAAW,YAAC,AAAY,gBAAI,AAAI,AAAC,MAAC,AAAC;AACrC,kBAAM,AAAgB,mBAAG,MAAM,AAAQ,SAAC,AAAW,YAAC,AAAW,YAAC,AAAgB,kBAAE,AAAkB,AAAC;AACrG,kBAAM,AAAY,eAAG,AAAgB,oBAAI,AAAI,OAAG,AAAI,OAAG,MAAM,AAAQ,8CAAC,AAAgB,kBAAE,AAAO,AAAC;AAChG,AAAiD;AACjD,AAAE,AAAC,gBAAC,AAAY,gBAAI,AAAI,AAAC,MAAC,AAAC;AACzB,AAAW,4BAAC,AAAY,eAAG,AAAY,AACzC;AAAC,AACH;AAAC;AACD,eAAO,AAAW,YAAC,AAAgB;AAEnC,cAAM,AAAY,eAAG,IAAI,AAAG,AAAU;AAEtC,cAAM,AAAU,aAAG,MAAM,AAAgB,iBAAC,AAAO,SAAE,AAAK,OAAE,AAAW,AAAC;AACtE,AAAG,AAAC,aAAC,MAAM,AAAa,iBAAI,AAAc,AAAC,gBAAC,AAAC;AAC3C,gBAAI,AAAI,OAAG,AAAU;AACrB,AAAE,AAAC,gBAAC,AAAa,cAAC,AAAQ,aAAK,AAAS,AAAC,WAAC,AAAC;AACzC,AAAQ,AACV;AAAC;AAED,kBAAM,AAAO,UAAI,AAAsC,cAAC,AAAO,WAAI,AAAQ;AAE3E,gBAAI,AAAG,MAAG,AAAM;AAChB,AAAE,AAAC,gBAAC,AAAc,eAAC,AAAM,SAAG,AAAC,KAAI,AAAa,kBAAK,AAAc,eAAC,AAAC,AAAC,AAAC,IAAC,AAAC;AACrE,AAAG,sBAAG,AAAI,MAAC,AAAI,KAAC,AAAM,QAAE,AAAa,cAAC,AAAQ,AAAC,AACjD;AAAC;AAED,AAA2E;AAC3E,kBAAM,AAAgC,mCAAG,AAAa,cAAC,AAAQ,aAAK,AAAQ;AAE5E,AAAE,AAAC,gBAAC,AAAK,SAAI,AAAgC,AAAC,kCAAC,AAAC;AAC9C,sBAAM,AAAe,gBAAC,AAAa,eAAE,AAAM,QAAE,AAAG,KAAE,AAAO,SAAE,AAAY,cAAE,AAAO,SAAE,AAAQ,AAAC,AAC7F;AAAC;AAED,kBAAM,AAAc,iBAAG,AAAI,MAAC,AAAI,KAAC,AAAG,AAAE,QAAG,AAAO,UAAG,AAAK,QAAG,AAAM,SAAG,AAAE,EAAM,AAAC;AAC7E,AAAE,AAAC,gBAAC,AAAY,aAAC,AAAG,IAAC,AAAc,AAAC,AAAC,iBAAC,AAAC;AACrC,AAAQ,AACV;AAAC;AAED,AAAY,yBAAC,AAAG,IAAC,AAAc,AAAC;AAEhC,AAAmC;AACnC,AAAE,AAAC,gBAAC,AAAgC,oCAAI,AAAQ,SAAC,AAAQ,aAAK,AAAQ,iCAAC,AAAO,WAAI,AAAI,KAAC,AAAI,QAAI,AAAI,AAAC,MAAC,AAAC;AACpG,AAAyB;AACxB,AAAY,qBAAC,AAAI,OAAG,MAAM,AAAI,KAAC,AAAK,AACvC;AAAC;AAED,AAAE,AAAC,gBAAC,AAAK,MAAC,AAAgB,oBAAI,AAAI,QAAI,AAAa,cAAC,AAAQ,aAAK,AAAQ,AAAC,UAAC,AAAC;AAC1E,AAAI,yCACC,AAAI,QACP,AAAkB,oBAAE,AAAK,MAAC,AAAgB,AAC3C,AACH;AAAC;AACD,kBAAM,AAAU,gDAAC,AAAc,gBAAE,AAAQ,0CAAC,AAAI,AAAC,AAAC;AAEhD,AAAkE;AAClE,AAAQ,qBAAC,AAAI,KAAC,AAAuB;AACnC,AAAI,sBAAE,AAAc;AACpB,AAAI,sBAAE,AAAI;AACV,AAAQ;AACR,AAAM,wBAAE,AAAI;AACZ,AAAa,AACd,AAAC,AACJ;AAPwC;AAOvC,AACH;AAAC;;;;;;;;qEAED,AAAK,WAA2B,AAAe,SAAE,AAAsB,OAAE,AAAwB;AAC/F,cAAM,AAAI,uBACR,AAAO,SACP,AAAW,aAAE,IAAI,AAAI,AAAE,OAAC,AAAW,AAAE,eACrC,AAAI,MAAE,AAAI,MAAC,AAAQ,SAAC,AAAK,MAAC,AAAK,AAAC,OAChC,AAAM,QAAE,MAAM,AAAQ,oDAAC,AAAK,MAAC,AAAK,AAAC,SAChC,AAAyB,AAC7B;AAED,cAAM,AAAY,eAAG,AAAK,MAAC,AAAY;AACvC,AAAE,AAAC,YAAC,AAAY,gBAAI,AAAI,AAAC,MAAC,AAAC;AACzB,kBAAM,AAAI,OAAG,AAAM,OAAC,AAAI,KAAC,AAAY,AAAC;AACtC,AAAE,AAAC,gBAAC,AAAI,KAAC,AAAM,SAAG,AAAC,AAAC,GAAC,AAAC;AACpB,AAAI,qBAAC,AAAQ,WAAG,AAAE;AAClB,AAAG,AAAC,qBAAC,MAAM,AAAI,QAAI,AAAI,AAAC,MAAC,AAAC;AACxB,0BAAM,AAAe,kBAAG,AAAY,aAAC,AAAI,AAAC;AAC1C,AAAI,yBAAC,AAAQ,SAAC,AAAI,AAAC,0BACd,AAAe,mBAClB,AAAI,MAAE,AAAI,MAAC,AAAQ,SAAC,AAAe,gBAAC,AAAI,AAAC,AAC1C,AACH;AAAC,AACH;AAAC,AACH;AAAC;AACD,AAAM,eAAC,AAAI,AACb;AAAC;;;;;;AAED,AAA2C;;;;qEAC3C,AAAK,WAA0B,AAAmC,eAAE,AAAc,QAAE,AAAW,KAAE,AAAe,SAAE,AAAyB,cAAE,AAAe,SAAE,AAA+B;AAC3L,cAAM,AAAQ,WAAG,AAAa,cAAC,AAAQ,aAAK,AAAQ;AACpD,cAAM,AAAc,iBAAI,AAAQ,YAAI,AAAM,WAAK,AAAG,AAAC,GAA5B,GAA+B,AAAI,MAAC,AAAI,KAAC,AAAG,KAAE,AAAQ,AAAE,aAAG,AAAO,OAAW,AAAC,eAAG,AAAI,MAAC,AAAI,KAAC,AAAG,AAAE,QAAG,AAAO,OAAW,AAAC;AAC7I,AAAE,AAAC,YAAC,CAAC,AAAY,aAAC,AAAG,IAAC,AAAc,AAAC,AAAC,iBAAC,AAAC;AACtC,AAAY,yBAAC,AAAG,IAAC,AAAc,AAAC;AAChC,kEAAiB,AAAc;AAC7B,AAAO;AACP,AAAW,6BAAE,IAAI,AAAI,AAAE,OAAC,AAAW,AAAE;AACrC,AAAG,qBAAE,AAAkB,oEAAC,AAAa,eAAE,AAAQ,SAAC,AAAa,cAAC,AAAK,OAAE,AAAK,OAAE,AAAQ,AAAC,WAAE,AAAQ,AAAC,AACjG;AAJgC,aAA3B,AAAU,EAIb,EAAC,AAAM,QAAE,AAAC,AAAC,AAAC;AAEf,AAAQ,qBAAC,AAAI,KAAC,AAAuB;AACnC,AAAI,sBAAE,AAAc;AACpB,AAAI,sBAAE,AAAI;AACV,AAAQ;AACR,AAAM,wBAAE,AAAI;AACZ,AAAa,AACd,AAAC,AACJ;AAPwC;AAOvC,AACH;AAAC;;;;;;;;;;;AA1ID,AAAO,AAAE,AAAQ,AAAE,AAAM,AAAc;;;;;;AAEvC,AAAO,AAAE,AAAU,AAAE,AAAU,AAAE,AAAQ,AAAE,AAAM,AAAY;;;;;;AAC7D,AAAO,AAAE,AAAQ,AAAE,AAAM,AAAS;;;;;;AAClC,AAAO,AAAE,AAAI,AAAE,AAAM,AAAU;;;;AAC/B,AAAO,AAAK,AAAI,AAAM,AAAM;;;;AAE5B,AAAO,AAAE,AAAQ,AAAE,AAAM,AAAS;;;;;;AAGlC,AAAO,AAAE,AAAkB,AAAE,AAA8B,AAAE,AAAM,AAAkB","sourcesContent":["import { hashFile } from \"builder-util\"\nimport { GenericServerOptions, PublishConfiguration, UpdateInfo } from \"builder-util-runtime\"\nimport { outputFile, outputJson, readFile } from \"fs-extra-p\"\nimport { safeDump } from \"js-yaml\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\nimport { ReleaseInfo } from \"../configuration\"\nimport { Platform } from \"../core\"\nimport { ArtifactCreated } from \"../packagerApi\"\nimport { PlatformPackager } from \"../platformPackager\"\nimport { computeDownloadUrl, getPublishConfigsForUpdateInfo } from \"./PublishManager\"\n\n/** @internal */\nexport async function writeUpdateInfo(event: ArtifactCreated, _publishConfigs: Array<PublishConfiguration>) {\n  const packager = event.packager\n  const publishConfigs = await getPublishConfigsForUpdateInfo(packager, _publishConfigs, event.arch)\n  if (publishConfigs == null || publishConfigs.length === 0) {\n    return\n  }\n\n  const target = event.target!\n  const outDir = target.outDir\n  const version = packager.appInfo.version\n  const sha2 = new Lazy<string>(() => hashFile(event.file!, \"sha256\", \"hex\"))\n  const isMac = packager.platform === Platform.MAC\n\n  const releaseInfo: ReleaseInfo = {...packager.config.releaseInfo}\n  if (releaseInfo.releaseNotes == null) {\n    const releaseNotesFile = await packager.getResource(releaseInfo.releaseNotesFile, \"release-notes.md\")\n    const releaseNotes = releaseNotesFile == null ? null : await readFile(releaseNotesFile, \"utf-8\")\n    // to avoid undefined in the file, check for null\n    if (releaseNotes != null) {\n      releaseInfo.releaseNotes = releaseNotes\n    }\n  }\n  delete releaseInfo.releaseNotesFile\n\n  const createdFiles = new Set<string>()\n\n  const sharedInfo = await createUpdateInfo(version, event, releaseInfo)\n  for (const publishConfig of publishConfigs) {\n    let info = sharedInfo\n    if (publishConfig.provider === \"bintray\") {\n      continue\n    }\n\n    const channel = (publishConfig as GenericServerOptions).channel || \"latest\"\n\n    let dir = outDir\n    if (publishConfigs.length > 1 && publishConfig !== publishConfigs[0]) {\n      dir = path.join(outDir, publishConfig.provider)\n    }\n\n    // spaces is a new publish provider, no need to keep backward compatibility\n    const isElectronUpdater1xCompatibility = publishConfig.provider !== \"spaces\"\n\n    if (isMac && isElectronUpdater1xCompatibility) {\n      await writeOldMacInfo(publishConfig, outDir, dir, channel, createdFiles, version, packager)\n    }\n\n    const updateInfoFile = path.join(dir, `${channel}${isMac ? \"-mac\" : \"\"}.yml`)\n    if (createdFiles.has(updateInfoFile)) {\n      continue\n    }\n\n    createdFiles.add(updateInfoFile)\n\n    // noinspection JSDeprecatedSymbols\n    if (isElectronUpdater1xCompatibility && packager.platform === Platform.WINDOWS && info.sha2 == null) {\n      // backward compatibility\n      (info as any).sha2 = await sha2.value\n    }\n\n    if (event.safeArtifactName != null && publishConfig.provider === \"github\") {\n      info = {\n        ...info,\n        githubArtifactName: event.safeArtifactName,\n      }\n    }\n    await outputFile(updateInfoFile, safeDump(info))\n\n    // artifact should be uploaded only to designated publish provider\n    packager.info.dispatchArtifactCreated({\n      file: updateInfoFile,\n      arch: null,\n      packager,\n      target: null,\n      publishConfig,\n    })\n  }\n}\n\nasync function createUpdateInfo(version: string, event: ArtifactCreated, releaseInfo: ReleaseInfo) {\n  const info: UpdateInfo = {\n    version,\n    releaseDate: new Date().toISOString(),\n    path: path.basename(event.file!),\n    sha512: await hashFile(event.file!),\n    ...releaseInfo as UpdateInfo,\n  }\n\n  const packageFiles = event.packageFiles\n  if (packageFiles != null) {\n    const keys = Object.keys(packageFiles)\n    if (keys.length > 0) {\n      info.packages = {}\n      for (const arch of keys) {\n        const packageFileInfo = packageFiles[arch]\n        info.packages[arch] = {\n          ...packageFileInfo,\n          file: path.basename(packageFileInfo.file)\n        }\n      }\n    }\n  }\n  return info\n}\n\n// backward compatibility - write json file\nasync function writeOldMacInfo(publishConfig: PublishConfiguration, outDir: string, dir: string, channel: string, createdFiles: Set<string>, version: string, packager: PlatformPackager<any>) {\n  const isGitHub = publishConfig.provider === \"github\"\n  const updateInfoFile = (isGitHub && outDir === dir) ? path.join(dir, \"github\", `${channel}-mac.json`) : path.join(dir, `${channel}-mac.json`)\n  if (!createdFiles.has(updateInfoFile)) {\n    createdFiles.add(updateInfoFile)\n    await outputJson(updateInfoFile, {\n      version,\n      releaseDate: new Date().toISOString(),\n      url: computeDownloadUrl(publishConfig, packager.generateName2(\"zip\", \"mac\", isGitHub), packager),\n    }, {spaces: 2})\n\n    packager.info.dispatchArtifactCreated({\n      file: updateInfoFile,\n      arch: null,\n      packager,\n      target: null,\n      publishConfig,\n    })\n  }\n}\n"]}
