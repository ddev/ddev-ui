{"version":3,"file":"packageDependencies.js","sourceRoot":"","sources":["../../src/util/packageDependencies.ts"],"names":[],"mappings":"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","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { debug } from \"builder-util\"\nimport { CONCURRENCY } from \"builder-util/out/fs\"\nimport { orNullIfFileNotExist } from \"builder-util/out/promise\"\nimport { lstat, readdir, readFile, realpath, Stats } from \"fs-extra-p\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\n\nexport interface Dependency {\n  name: string\n  version: string\n  path: string\n  extraneous: boolean\n  optional: boolean\n\n  dependencies: Map<string, Dependency> | null\n  directDependencyNames: { [key: string]: any } | null\n  optionalDependencies: { [key: string]: any } | null\n\n  realName: string\n  link?: string\n\n  parent?: Dependency\n\n  // only if link\n  stat?: Stats\n}\n\nconst knownAlwaysIgnoredDevDeps = new Set([\n  \"electron-builder-tslint-config\", \"electron-download\",\n  \"electron-forge\", \"electron-packager\", \"electron-compilers\",\n  \"jest\", \"jest-cli\", \"prebuild-install\", \"nan\",\n  \"electron-webpack\", \"electron-webpack-ts\", \"electron-webpack-vue\",\n  \"react-scripts\",\n])\n\nif (process.env.ALLOW_ELECTRON_BUILDER_AS_PRODUCTION_DEPENDENCY !== \"true\") {\n  knownAlwaysIgnoredDevDeps.add(\"electron-builder\")\n  knownAlwaysIgnoredDevDeps.add(\"builder-util\")\n  knownAlwaysIgnoredDevDeps.add(\"electron-publish\")\n  knownAlwaysIgnoredDevDeps.add(\"electron-download-tf\")\n}\n\nexport function createLazyProductionDeps(projectDir: string) {\n  return new Lazy(() => getProductionDependencies(projectDir))\n}\n\n/** @internal */\nexport async function getProductionDependencies(folder: string): Promise<Array<Dependency>> {\n  const sorted: Array<Dependency> = []\n  computeSortedPaths(await computeDependencies(folder), sorted, false)\n  return sorted\n}\n\nasync function computeDependencies(folder: string): Promise<Dependency> {\n  const pathToDep = new Map<string, Dependency>()\n  const obj = await readJson(path.join(folder, \"package.json\"))\n  await _readInstalled(folder, obj, null, null, 0, pathToDep)\n  unmarkExtraneous(obj, false, true)\n  return obj\n}\n\nfunction readJson(file: string) {\n  return readFile(file, \"utf-8\")\n    .then(it => JSON.parse(it, (key, value) => key === \"description\" || key === \"author\" || key === \"scripts\" || key === \"maintainers\" || key === \"keywords\" || key === \"devDependencies\" ? undefined : value))\n}\n\nfunction computeSortedPaths(parent: Dependency, result: Array<Dependency>, isExtraneous: boolean) {\n  const dependencies = parent.dependencies\n  if (dependencies == null) {\n    return\n  }\n\n  for (const dep of dependencies.values()) {\n    if (dep.extraneous === isExtraneous) {\n      result.push(dep)\n      computeSortedPaths(dep, result, isExtraneous)\n    }\n  }\n}\n\nasync function _readInstalled(dir: string, obj: Dependency, parent: any | null, name: string | null, depth: number, pathToMetadata: Map<string, Dependency>): Promise<void> {\n  obj.realName = name || obj.name\n  obj.directDependencyNames = obj.dependencies == null ? null : Object.keys(obj.dependencies)\n\n  // Mark as extraneous at this point.\n  // This will be un-marked in unmarkExtraneous, where we mark as not-extraneous everything that is required in some way from the root object.\n  obj.extraneous = true\n  obj.optional = true\n\n  if (parent != null) {\n    if (obj.link == null) {\n      obj.parent = parent\n    }\n\n    // do not add root project to result\n    pathToMetadata.set(dir, obj)\n  }\n\n  if (obj.dependencies == null && obj.optionalDependencies == null) {\n    // package has only dev or peer dependencies - no need to check child node_module\n    obj.dependencies = null\n    return\n  }\n\n  const childModules = await readScopedDir(path.join(dir, \"node_modules\"))\n  if (childModules == null) {\n    obj.dependencies = null\n    return\n  }\n\n  const deps = await BluebirdPromise.map(childModules, it => readChildPackage(it, dir, obj, depth, pathToMetadata), CONCURRENCY)\n  if (deps.length === 0) {\n    obj.dependencies = null\n    return\n  }\n\n  const nameToMetadata = new Map<string, Dependency>()\n  for (const dep of deps) {\n    if (dep != null) {\n      nameToMetadata.set(dep.realName, dep)\n    }\n  }\n  obj.dependencies = nameToMetadata\n}\n\nasync function readChildPackage(name: string, parentDir: string, parent: any, parentDepth: number, pathToMetadata: Map<string, Dependency>): Promise<Dependency | null> {\n  const rawDir = path.join(parentDir, \"node_modules\", name)\n  let dir: string | null = rawDir\n  const stat = await lstat(dir)\n  const isSymbolicLink = stat.isSymbolicLink()\n  if (isSymbolicLink) {\n    dir = await orNullIfFileNotExist(realpath(dir))\n    if (dir == null) {\n      debug(`Broken symlink ${rawDir}`)\n      return null\n    }\n  }\n\n  const processed = pathToMetadata.get(dir)\n  if (processed != null) {\n    return processed\n  }\n\n  const metadata: Dependency = await orNullIfFileNotExist(readJson(path.join(dir, \"package.json\")))\n  if (metadata == null) {\n    return null\n  }\n\n  if (isSymbolicLink) {\n    metadata.link = dir\n    metadata.stat = stat\n  }\n  metadata.path = rawDir\n  await _readInstalled(dir, metadata, parent, name, parentDepth + 1, pathToMetadata)\n  return metadata\n}\n\nfunction unmark(deps: Iterable<string>, obj: Dependency, dev: boolean, unsetOptional: boolean) {\n  for (const name of deps) {\n    const dep = findDep(obj, name)\n    if (dep != null) {\n      if (unsetOptional) {\n        dep.optional = false\n      }\n      if (dep.extraneous) {\n        unmarkExtraneous(dep, dev, false)\n      }\n    }\n  }\n}\n\nfunction unmarkExtraneous(obj: any, isDev: boolean, isRoot: boolean) {\n  // Mark all non-required deps as extraneous.\n  // start from the root object and mark as non-extraneous all modules\n  // that haven't been previously flagged as extraneous then propagate to all their dependencies\n\n  obj.extraneous = false\n\n  if (obj.directDependencyNames != null) {\n    unmark(obj.directDependencyNames, obj, isDev, true)\n  }\n\n  if (isDev && obj.devDependencies != null && (isRoot || obj.link)) {\n    unmark(Object.keys(obj.devDependencies), obj, isDev, true)\n  }\n\n  if (obj.peerDependencies != null) {\n    unmark(Object.keys(obj.peerDependencies), obj, isDev, true)\n  }\n\n  if (obj.optionalDependencies != null) {\n    unmark(Object.keys(obj.optionalDependencies), obj, isDev, false)\n  }\n}\n\n// find the one that will actually be loaded by require() so we can make sure it's valid\nfunction findDep(obj: Dependency, name: string) {\n  if (knownAlwaysIgnoredDevDeps.has(name)) {\n    return null\n  }\n\n  let r: Dependency | null | undefined = obj\n  let found = null\n  while (r != null && found == null) {\n    // if r is a valid choice, then use that.\n    // kinda weird if a pkg depends on itself, but after the first iteration of this loop, it indicates a dep cycle.\n    found = r.dependencies == null ? null : r.dependencies.get(name)\n    if (found == null && r.realName === name) {\n      found = r\n    }\n    r = r.link == null ? r.parent : null\n  }\n  return found\n}\n\nasync function readScopedDir(dir: string): Promise<Array<string> | null> {\n  let files: Array<string>\n  try {\n    files = (await readdir(dir)).filter(it => !it.startsWith(\".\") && !knownAlwaysIgnoredDevDeps.has(it))\n  }\n  catch (e) {\n    // error indicates that nothing is installed here\n    return null\n  }\n\n  files.sort()\n\n  const scopes = files.filter(it => it.startsWith(\"@\") && it !== \"@types\")\n  if (scopes.length === 0) {\n    return files\n  }\n\n  const result = files.filter(it => !it.startsWith(\"@\"))\n  const scopeFileList = await BluebirdPromise.map(scopes, it => readdir(path.join(dir, it)))\n  for (let i = 0; i < scopes.length; i++) {\n    const list = scopeFileList[i]\n    list.sort()\n    for (const file of list) {\n      if (!file.startsWith(\".\")) {\n        result.push(`${scopes[i]}/${file}`)\n      }\n    }\n  }\n\n  return result\n}\n"]}
