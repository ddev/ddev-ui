defaults: &defaults
  macos:
    xcode: "10.1.0"
  environment:
    ARTIFACTS: /artifacts
  working_directory: ~/ddev-ui

aliases:
  # Source: restore
  - &restore_source
    restore_cache:
      keys:
        - v4-source-{{ .Branch }}-{{ .Revision }}
        - v4-source-{{ .Branch }}-
  # Source: cache
  - &cache_source
    save_cache:
      key: v4-source-{{ .Branch }}-{{ .Revision }}
      paths:
        - ~/ddev-ui

  # Yarn: restore
  - &restore_yarn
    restore_cache:
      keys:
        - v4-yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
        - v4-yarn-packages-{{ .Branch }}-
  # Yarn: cache
  - &cache_yarn
    save_cache:
      key: v4-yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
      paths:
        - ~/ddev-ui/node_modules

  # Display installed tools
  - &log_tools
    run:
      name: Installed tool versions
      command: >-
        echo "git commit=$(make version) node version=$(node --version) npm
        version=$(npm --version) wine version=$(wine --version) HOME=$HOME
        USER=$(whoami) PWD=$PWD"

version: 2.0
jobs:
  build:
    <<: *defaults
    steps:
      # Checkout the codebase
      - *restore_source
      - checkout
      - *cache_source
      # build app dependancies
      - *restore_yarn
      - run: yarn install
      - *cache_yarn
      ## echo installed tools
      - *log_tools

      # build apps
      - run: make darwin
      # - run: make all

      - persist_to_workspace:
          root: ./
          paths:
            - dist

  test:
    <<: *defaults
    steps:
      - *restore_source
      - checkout
      - *restore_yarn
      - run: yarn install

      # Build unpacked dir. Useful to test.
      - run: yarn dist:dir
      # run tests
      - run: make test

  artifacts:
    <<: *defaults
    steps:
      - *restore_source
      - checkout
      - attach_workspace:
          at: ~/ddev-ui
<<<<<<< HEAD
      # upload artifacts to circleci
      - run:
          command: ./.circleci/generate_artifacts.sh $ARTIFACTS
          name: tar/zip up artifacts and make hashes
      - store_artifacts:
          path: /artifacts

      # - store_artifacts:
      #     path: /artifacts

      # - run: make test

      # # only release Darwin for now
      # - run: make release-darwin
      # # - run: make release

      # all other test jobs will run AFTER this build job finishes
      # to avoid reinstalling dependencies, we persist the source folder "app"
      # and the Cypress binary to workspace, which is the fastest way
      # for Circle jobs to pass files
      - persist_to_workspace:
          root: ~/
          paths:
            - ddev-ui
            - .cache

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/

      # Homebrew Setup
      - restore_cache:
          keys:
            - v2-homebrew-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - v2-homebrew-{{ .Branch }}-

      ## echo installed tools
      - run:
          name: Installed tool versions
          command: >-
            echo "git commit=$(make version) node version=$(node --version) npm
            version=$(npm --version) wine version=$(wine --version) HOME=$HOME
            USER=$(whoami) PWD=$PWD"

      - run: make test

>>>>>>> update circle config to get workflow bug fixed
workflows:
  version: 2
  workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - artifacts:
          requires:
            - build
            - test
          filters:
            branches:
              ignore:
                - master
      - release:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - master
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test
