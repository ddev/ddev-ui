version: 2
stages:
  build:
    macos:
      xcode: "9.0"

    environment:
      ARTIFACTS: /artifacts

    working_directory: ~/ddev-ui

    steps:
      - checkout

      - run:
          name: xquartz setup
          command: brew cask install xquartz  # dependency of wine

      - run: brew update && brew info --json=v1 node >/tmp/info.txt && brew info --json=v1 wine >>/tmp/info.txt

      - restore_cache:
          keys:
            - homebrew-v2-{{ checksum "/tmp/info.txt" }}
            - homebrew-v2-

      - run:
          name: Homebrew install of node/wine
          command: |
            brew upgrade node || true
            brew install wine || true
            brew link wine || true

      - save-cache:
          key: homebrew-v2-{{ checksum "/tmp/info.txt" }}
          paths:
            - /usr/local/Cellar/node
            - /usr/local/Cellar/wine
            - /usr/local/bin/node
            - /usr/local/bin/npm
            - /usr/local/bin/wine
            - /usr/local/bin/wine64
            - /usr/local/bin/wineboot
            - /usr/local/bin/winebuild
            - /usr/local/bin/winecfg
            - /usr/local/bin/wineconsole
            - /usr/local/bin/winecpp
            - /usr/local/bin/winedbg
            - /usr/local/bin/winedump
            - /usr/local/bin/winefile
            - /usr/local/bin/wineg++
            - /usr/local/bin/winegcc
            - /usr/local/bin/winemaker
            - /usr/local/bin/winemine
            - /usr/local/bin/winepath
            - /usr/local/bin/wineserver

      - run:
          name: Installed tool versions
          command: echo "git commit=$(make version) node version=$(node --version) npm version=$(npm --version) wine version=$(wine --version) HOME=$HOME USER=$(whoami) PWD=$PWD"

      - run: make clean all

      - run: make test

      - run:
          command: ./.circleci/generate_artifacts.sh $ARTIFACTS
          name: tar/zip up artifacts and make hashes

      - store_artifacts:
          path: /artifacts
          name: Artifact storage
